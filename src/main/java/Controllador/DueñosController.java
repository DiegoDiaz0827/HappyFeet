/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Controllador;

import DAO.Due√±oDAO;
import Model.Entities.Due√±os;
import java.time.LocalDateTime;
import java.util.List;

/**
 *
 * @author camper
 */
public class Due√±osController {
    
    Due√±oDAO due√±odao = new Due√±oDAO();
    
    public void registrarDue√±o(Due√±os d){
    try {
            if (d.getFechaRegistro() == null) {
                d.setFechaRegistro(LocalDateTime.now());
            }
            due√±odao.agregar(d) ;
            System.out.println("üéâ El due√±o " + d.getNombreCompleto() + " ha sido registrado exitosamente.");
        } catch (Exception e) {
            System.err.println("‚ùå Error al registrar el due√±o: " + e.getMessage());
        }
    }
    
    public boolean actualizarDueno(Due√±os dueno) {
        System.out.println("\n--- ACTUALIZANDO DUE√ëO ID: " + dueno.getId() + " ---");
        boolean actualizado = due√±odao.actualizar(dueno);
        if (actualizado) {
            System.out.println("‚úÖ Datos del due√±o ID " + dueno.getId() + " actualizados correctamente.");
        } else {
            System.out.println("‚ùå No se pudo actualizar el due√±o ID " + dueno.getId() + ".");
        }
        return actualizado;
    }
    
    public boolean eliminarDueno(int id) {
        System.out.println("\n--- ELIMINANDO DUE√ëO ID: " + id + " ---");
        boolean eliminado = due√±odao.eliminar(id);
        if (eliminado) {
            System.out.println("‚úÖ Due√±o ID " + id + " eliminado correctamente.");
        } else {
            System.out.println("‚ùå No se pudo eliminar el due√±o ID " + id + ".");
        }
        return eliminado;
    }

    public Due√±os buscarDuenoPorId(int id) {
        System.out.println("\n--- BUSCANDO DUE√ëO ID: " + id + " ---");
        Due√±os dueno = due√±odao.obtenerPorId(id);
        if (dueno != null) {
            System.out.println("üîé Encontrado: " + dueno.getNombreCompleto());
        } else {
            System.out.println("‚ö†Ô∏è Due√±o ID " + id + " no encontrado.");
        }
        return dueno;
    }

    public List<Due√±os> obtenerTodosLosDuenos() {
        System.out.println("\n--- LISTANDO TODOS LOS DUE√ëOS ---");
        List<Due√±os> lista = due√±odao.listarTodos();
        System.out.println("üìä Se encontraron " + lista.size() + " due√±os.");
        return lista;
    }
    
    
    }
    
    
    

